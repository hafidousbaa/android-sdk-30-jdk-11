#image: openjdk:11

#variables:
#  ANDROID_COMPILE_SDK: "30"
#  ANDROID_BUILD_TOOLS: "30.0.3"
#  ANDROID_SDK_TOOLS:   "6858069_latest"
variables:
  DOCKER_DRIVER: overlay2
before_script:
 - chmod +x gradlew
#- apt-get --quiet update --yes
#- apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
#- wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}.zip
#- unzip -d android-sdk-linux android-sdk.zip
#- echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
#- echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "platform-tools" >/dev/null
#- echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
#- export ANDROID_SDK_ROOT=$PWD
#- export PATH=$PATH:$PWD/platform-tools/
#- chmod +x ./gradlew
#  yes to accept all licenses
#- set +o pipefail
#- yes | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. --licenses
#- set -o pipefail

cache:
  key: cache-digicheck-apk
  paths:
    - .gradle/

stages:
  - build
  - test
  - deploy

assembleDebug:
  image: androidsdk/android-30
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
    - app/build/outputs/

debugTests:
  image: androidsdk/android-30
  stage: test
  dependencies:
    - assembleDebug
  script:
    - ./gradlew check -Pci --console=plain :app:testDebug

SonarQubeStage:
  stage: test
  image: openjdk:11
  variables:
    ANDROID_COMPILE_SDK: "30"
    ANDROID_BUILD_TOOLS: "30.0.3"
    ANDROID_SDK_TOOLS:   "6858069_latest"
  dependencies:
    - assembleDebug
  before_script:
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "platform-tools" >/dev/null
    - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_SDK_ROOT=$PWD
    - export PATH=$PATH:$PWD/platform-tools/
    - chmod +x ./gradlew
    - set +o pipefail
    - yes | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. --licenses
    - set -o pipefail
  script:
    - ./gradlew sonarqube


DeployFirebase:
  image: androidsdk/android-30
  stage: deploy
  needs:
    - assembleDebug
    - debugTests
    - SonarQubeStage
  dependencies:
    - assembleDebug
  before_script:
    - apt-get update && apt-get install -y sudo
    - curl -sL https://firebase.tools | bash
  script:
    - firebase appdistribution:distribute app/build/outputs/apk/**/*.apk --app $FIREBASE_APP_ID --token $FIREBASE_TOKEN --groups testeurs --release-notes "$CI_COMMIT_AUTHOR.$CI_COMMIT_MESSAGE"
